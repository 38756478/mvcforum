@using MVCForum.Domain.Constants
@using MVCForum.Domain;
@using MVCForum.Utilities
@model MVCForum.Website.ViewModels.ViewTopicViewModel
@{
    var topic = Model.Topic;
    var posts = topic.Posts.ToList();
    var topicSolved = Model.Topic.Solved ? "answered" : "";

    var firstPost = posts.FirstOrDefault(x => x.IsTopicStarter);
    var postToolTip = string.Empty;
    if (firstPost != null)
    {
        postToolTip = string.Concat(StringUtils.ReturnAmountWordsFromString(StringUtils.StripHtmlFromString(firstPost.PostContent), 50), "....");
    }
    
}
@if (!Model.Permissions[AppConstants.PermissionDenyAccess].IsTicked)
{
    <div class="topicrow topicsticky-@topic.IsSticky topiclocked-@topic.IsLocked">
        <div class="row">

            <div class="span1 topicstats">
                <div class="topicstatsblock @topicSolved">
                    @if (Html.Settings().EnablePoints)
                    {
                        <div class="topicvotes">@topic.VoteCount <span>@Html.LanguageString("Topic.Votes")</span></div>
                    }
                    <div class="topiccomments">@(posts.Count() - 1) <span>@Html.LanguageString("Topic.Comments")</span></div>
                </div>
                <span class="topicviews">@topic.Views @Html.LanguageString("Topic.Views")</span>
            </div>
            

            <div class="span7 topicrowdetails">
                <h3><a title="@postToolTip" href="@Html.Raw(topic.NiceUrl)">
                    @if (topic.IsSticky)
                    {
                        <img src="@Url.Content("~/Content/Images/icon-sticky.png")" class="topicicon" alt="" /> 
                    }
                    @if (topic.Poll != null)
                    {
                        <img src="@Url.Content("~/Content/Images/icon-poll.png")" class="topicicon" alt="" />
                    }
                    @Html.Raw(topic.Name)
                </a></h3>
                @if (topic.Tags.Any())
                {
                    <div class="tagsinput">
                        @foreach (var tag in topic.Tags)
                        {
                            <span class="tag"><span><a href="@UrlTypes.GenerateUrl(UrlType.Tag, tag.Tag)">@tag.Tag</a></span></span>   
                        }
                    </div>
                }

                <div class="topicrowstatscategory">
                    @Html.Raw(string.Format(Html.LanguageString("Topic.StartedBy"), DatesUI.GetPrettyDate(topic.CreateDate.ToString()), topic.User.UserName))
                    @if (Model.ShowCategoryName)
                    {                            
                        <text> @Html.LanguageString("Topic.InCategory") <a href="@topic.Category.NiceUrl">@topic.Category.Name</a></text>
                    }
                </div>
            </div>

            <div class="span1 topicrecent">
                <p class="topicrecenttitle">@Html.LanguageString("Topic.LatestBy")</p>
                <p class="topicrecentavatar">
                    <a href="@topic.LastPost.User.NiceUrl">
                        <img src="@StringUtils.GetGravatarImage(topic.LastPost.User.Email, AppConstants.GravatarTopicSize)" alt="@topic.LastPost.User.UserName" title="@topic.LastPost.User.UserName"></a>
                </p>
                <p class="topicrecentdate">@DatesUI.GetPrettyDate(topic.LastPost.DateCreated.ToString())</p>
            </div>

        </div>
    </div>
}